// Code generated by goctl. DO NOT EDIT.
// Source: user_rpc.proto

package users

import (
	"context"

	"fim/fim_user/user_rpc/types/user_grpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	UserCreateRequest  = user_grpc.UserCreateRequest
	UserCreateResponse = user_grpc.UserCreateResponse
	UserInfoRequest    = user_grpc.UserInfoRequest
	UserInfoResponse   = user_grpc.UserInfoResponse

	Users interface {
		CreateUser(ctx context.Context, in *UserCreateRequest, opts ...grpc.CallOption) (*UserCreateResponse, error)
		UserInfo(ctx context.Context, in *UserInfoRequest, opts ...grpc.CallOption) (*UserInfoResponse, error)
	}

	defaultUsers struct {
		cli zrpc.Client
	}
)

func NewUsers(cli zrpc.Client) Users {
	return &defaultUsers{
		cli: cli,
	}
}

func (m *defaultUsers) CreateUser(ctx context.Context, in *UserCreateRequest, opts ...grpc.CallOption) (*UserCreateResponse, error) {
	client := user_grpc.NewUsersClient(m.cli.Conn())
	return client.CreateUser(ctx, in, opts...)
}

func (m *defaultUsers) UserInfo(ctx context.Context, in *UserInfoRequest, opts ...grpc.CallOption) (*UserInfoResponse, error) {
	client := user_grpc.NewUsersClient(m.cli.Conn())
	return client.UserInfo(ctx, in, opts...)
}
